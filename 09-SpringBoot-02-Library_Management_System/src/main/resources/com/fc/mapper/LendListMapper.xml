<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fc.dao.LendListMapper">
  <resultMap id="BaseResultMap" type="com.fc.entity.LendList">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="bookId" jdbcType="INTEGER" property="bookid" />
    <result column="readerId" jdbcType="INTEGER" property="readerid" />
    <result column="lendDate" jdbcType="TIMESTAMP" property="lenddate" />
    <result column="backDate" jdbcType="TIMESTAMP" property="backdate" />
    <result column="backType" jdbcType="INTEGER" property="backtype" />
    <result column="exceptRemarks" jdbcType="VARCHAR" property="exceptremarks" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, bookId, readerId, lendDate, backDate, backType, exceptRemarks
  </sql>
  <select id="selectByExample" parameterType="com.fc.entity.LendListExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from lend_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from lend_list
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from lend_list
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.fc.entity.LendListExample">
    delete from lend_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fc.entity.LendList">
    insert into lend_list (id, bookId, readerId, 
      lendDate, backDate, backType, 
      exceptRemarks)
    values (#{id,jdbcType=INTEGER}, #{bookid,jdbcType=INTEGER}, #{readerid,jdbcType=INTEGER}, 
      #{lenddate,jdbcType=TIMESTAMP}, #{backdate,jdbcType=TIMESTAMP}, #{backtype,jdbcType=INTEGER}, 
      #{exceptremarks,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.fc.entity.LendList">
    insert into lend_list
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="bookid != null">
        bookId,
      </if>
      <if test="readerid != null">
        readerId,
      </if>
      <if test="lenddate != null">
        lendDate,
      </if>
      <if test="backdate != null">
        backDate,
      </if>
      <if test="backtype != null">
        backType,
      </if>
      <if test="exceptremarks != null">
        exceptRemarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="bookid != null">
        #{bookid,jdbcType=INTEGER},
      </if>
      <if test="readerid != null">
        #{readerid,jdbcType=INTEGER},
      </if>
      <if test="lenddate != null">
        #{lenddate,jdbcType=TIMESTAMP},
      </if>
      <if test="backdate != null">
        #{backdate,jdbcType=TIMESTAMP},
      </if>
      <if test="backtype != null">
        #{backtype,jdbcType=INTEGER},
      </if>
      <if test="exceptremarks != null">
        #{exceptremarks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fc.entity.LendListExample" resultType="java.lang.Long">
    select count(*) from lend_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update lend_list
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.bookid != null">
        bookId = #{record.bookid,jdbcType=INTEGER},
      </if>
      <if test="record.readerid != null">
        readerId = #{record.readerid,jdbcType=INTEGER},
      </if>
      <if test="record.lenddate != null">
        lendDate = #{record.lenddate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.backdate != null">
        backDate = #{record.backdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.backtype != null">
        backType = #{record.backtype,jdbcType=INTEGER},
      </if>
      <if test="record.exceptremarks != null">
        exceptRemarks = #{record.exceptremarks,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update lend_list
    set id = #{record.id,jdbcType=INTEGER},
      bookId = #{record.bookid,jdbcType=INTEGER},
      readerId = #{record.readerid,jdbcType=INTEGER},
      lendDate = #{record.lenddate,jdbcType=TIMESTAMP},
      backDate = #{record.backdate,jdbcType=TIMESTAMP},
      backType = #{record.backtype,jdbcType=INTEGER},
      exceptRemarks = #{record.exceptremarks,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fc.entity.LendList">
    update lend_list
    <set>
      <if test="bookid != null">
        bookId = #{bookid,jdbcType=INTEGER},
      </if>
      <if test="readerid != null">
        readerId = #{readerid,jdbcType=INTEGER},
      </if>
      <if test="lenddate != null">
        lendDate = #{lenddate,jdbcType=TIMESTAMP},
      </if>
      <if test="backdate != null">
        backDate = #{backdate,jdbcType=TIMESTAMP},
      </if>
      <if test="backtype != null">
        backType = #{backtype,jdbcType=INTEGER},
      </if>
      <if test="exceptremarks != null">
        exceptRemarks = #{exceptremarks,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fc.entity.LendList">
    update lend_list
    set bookId = #{bookid,jdbcType=INTEGER},
      readerId = #{readerid,jdbcType=INTEGER},
      lendDate = #{lenddate,jdbcType=TIMESTAMP},
      backDate = #{backdate,jdbcType=TIMESTAMP},
      backType = #{backtype,jdbcType=INTEGER},
      exceptRemarks = #{exceptremarks,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>